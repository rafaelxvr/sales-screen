unit Model.Produto.SQL;

interface

uses
  Data.DB, Model.Conexao.Factory, FireDAC.Comp.Client;

type
  TModelProdutoSQL = class
  private
    ConexaoDB : TCustomConnection;
    ConexaoFactory : TModelConexaoFactory;
    Qry : TFDQuery;
    F_produtoId:Integer;
    F_nome:String;
    F_descricao: string;
    F_valor:Double;
    F_quantidade: Double;
    F_categoriaId: Integer;

  public
    constructor Create(aConexao:TDataSet);
    destructor Destroy; override;
    function Selecionar(id:Integer):Boolean;
  published
    property produtoId        :Integer    read F_produtoId      write F_produtoId;
    property produtoNome      :string     read F_nome           write F_nome;
    property produtoDescricao :string     read F_descricao      write F_descricao;
    property produtoValor     :Double     read F_valor          write F_valor;
    property produtoQuantidade:Double     read F_quantidade     write F_quantidade;
    property categoriaId      :Integer    read F_categoriaId    write F_categoriaId;
  end;

implementation

uses
  System.SysUtils;


{ TCategoria }

{$region 'Constructor and Destructor'}
constructor TModelProdutoSQL.Create(aConexao:TDataSet);
begin
  aConexao := TModelConexaoFactory.Conexao.Connection;
  ConexaoDB := TModelConexaoFactory.Create.Conexao;
end;

destructor TModelProdutoSQL.Destroy;
begin

  inherited;
end;
{$endRegion}

function TModelProdutoSQL.Selecionar(id: Integer): Boolean;
begin
  try
    Result:=true;
    Qry := ConexaoFactory.Create.Query;
    Qry.Connection := ConexaoDB;
    Qry.SQL.Clear;
    Qry.SQL.Add('SELECT produtoId,'+
                '       nome, '+
                '       descricao, '+
                '       valor, '+
                '       quantidade, '+
                '       categoriaId '+
                '  FROM produtos '+
                ' WHERE produtoId=:produtoId');
    Qry.ParamByName('produtoId').AsInteger:=id;
    Try
      Qry.Open;

      Self.F_produtoId     := Qry.FieldByName('produtoId').AsInteger;
      Self.F_nome          := Qry.FieldByName('nome').AsString;
      Self.F_descricao     := Qry.FieldByName('descricao').AsString;
      Self.F_valor         := Qry.FieldByName('valor').AsFloat;
      Self.F_quantidade    := Qry.FieldByName('quantidade').AsFloat;
      Self.F_categoriaId   := Qry.FieldByName('categoriaId').AsInteger;
    Except
      Result:=false;
    End;

  finally
    if Assigned(Qry) then
       FreeAndNil(Qry);
  end;
end;

end.
