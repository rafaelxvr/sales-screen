unit Model.Conexao.Classes;

interface

uses
  System.Sysutils, Data.DB, System.Classes, FireDAC.Comp.Client, Model.Conexao.Interfaces;

type
  TModelConexao = class(TInterfacedObject, IModelConexao)
  public
    function AbreTabela(const ASQL: String; var ATabela: TFDQuery): Boolean; overload;
    function AbreTabela(const ASQL: String; AArgs: Array of const; var ATabela: TFDQuery): Boolean; overload;
    function AbreTabela(const ASQL: String; AArgs: Array of const): TFDQuery; overload;
    function AbreTabela(const ASQL: String): TFDQuery; overload;
    procedure ExecutarSQL(const ASQL: String); overload;
    procedure ExecutarSQL(const ASQL: String; AArgs: Array of const); overload;
    function ConsultarString(const ASQL: String; AArgs: Array of const): String;
    function ConsultarInteiro(const ASQL: String; AArgs: Array of const): Integer;
    function ConsultarExtended(const ASQL: String; AArgs: Array of const): Extended;
  end;

implementation

uses
  DMConexao;

{ TModelConexao }

function TModelConexao.AbreTabela(const ASQL: String; var ATabela: TFDQuery): Boolean; overload;
begin
  try
    if not Assigned(ATabela.Connection) then
      ATabela.Connection := fmDM.Connection;
    ATabela.Close;
    ATabela.SQL.Clear;
    ATabela.SQL.Text := ASQL;
    ATabela.Open;
    Result := ATabela.RecordCount > 0;
  except
    raise Exception.Create('Não foi possível realizar a consulta');
  end;
end;

function TModelConexao.AbreTabela(const ASQL: String; AArgs: Array of const; var ATabela: TFDQuery): Boolean;
begin
  Result := AbreTabela(Format(ASQL, AArgs), ATabela);
end;

function TModelConexao.AbreTabela(const ASQL: String): TFDQuery;
begin
  Result := AbreTabela(ASQL, []);
end;

function TModelConexao.AbreTabela(const ASQL: String; AArgs: Array of const): TFDQuery;
begin
  Result := TFDQuery.Create(nil);
  if Assigned(Result) then
    AbreTabela(ASQL, AArgs, Result);
end;

function TModelConexao.ConsultarExtended(const ASQL: String;
  AArgs: array of const): Extended;
begin

end;

function TModelConexao.ConsultarInteiro(const ASQL: String;
  AArgs: array of const): Integer;
begin

end;

function TModelConexao.ConsultarString(const ASQL: String;
  AArgs: array of const): String;
begin

end;

procedure TModelConexao.ExecutarSQL(const ASQL: String; AArgs: array of const);
begin

end;

procedure TModelConexao.ExecutarSQL(const ASQL: String);
begin

end;

end.
